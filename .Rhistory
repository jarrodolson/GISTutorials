length(out1)
city <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'City_Boundary')
city.df <- shapeToDataFrame(city)
bikes <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'Bike_Routes')
bikes.df <- shapeToDataFrame(bikes)
divvy <- read.csv("C:/users/jarrodanderin/Documents/_RWork/_Datasets/Divvy_Stations_Trips_2013/Divvy_Stations_Trips_2013/Divvy_Stations_2013.csv", stringsAsFactors=FALSE)
end.rcode-->
require(ggplot2)
require(rgdal)
require(sp)
require(raster)
require(plyr)
mapTheme <- theme_bw()+
theme(panel.border=element_blank(),
panel.grid=element_blank(),
axis.text=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position='none')
shapetoDataFrame <- function(shape){
shape <- spTransform(shape,CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
shape@data$id <- rownames(shape@data)
shape.points = fortify(shape,region='id')
shape.df = join(shape.points, shape@data, by='id')
}
city <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'City_Boundary')
city.df <- shapeToDataFrame(city)
bikes <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'Bike_Routes')
bikes.df <- shapeToDataFrame(bikes)
shapeToDataFrame <- function(shape){
shape <- spTransform(shape,CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
shape@data$id <- rownames(shape@data)
shape.points = fortify(shape,region='id')
shape.df = join(shape.points, shape@data, by='id')
}
city <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'City_Boundary')
city.df <- shapeToDataFrame(city)
bikes <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'Bike_Routes')
bikes.df <- shapeToDataFrame(bikes)
divvy <- read.csv("C:/users/jarrodanderin/Documents/_RWork/_Datasets/Divvy_Stations_Trips_2013/Divvy_Stations_Trips_2013/Divvy_Stations_2013.csv", stringsAsFactors=FALSE)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group))+
geom_path(data=bikes.df,aes(long,lat,group=group))+
geom_point(data=divvy,aes(x=latitude,y=longitude),color='red')+
mapTheme+coord_fixed()
ggplot(data=city.df,aes(long,lat,group=group))+geom_polygon()
class(divvy)
coordinates(divvy) <- ~longitude+latitude##Makes it into a spatialPointsDataFrame
class(divvy)
proj4string(divvy) <- CRS("+proj=longlat +datum=NAD83")
divvy <- spTransform(divvy,CRS(proj4string(city)))
divvy <- data.frame(divvy)##ggplot expects a datafrmae, not a spatialpoints dataframe
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()
class(divvy)
coordinates(divvy) <- ~longitude+latitude##Makes it into a spatialPointsDataFrame
class(divvy)
##We assume that the lat and long are in NAD83 projection
proj4string(divvy) <- CRS("+proj=longlat +datum=NAD83")
divvy <- read.csv("C:/users/jarrodanderin/Documents/_RWork/_Datasets/Divvy_Stations_Trips_2013/Divvy_Stations_Trips_2013/Divvy_Stations_2013.csv", stringsAsFactors=FALSE)
coordinates(divvy) <- ~longitude+latitude##Makes it into a spatialPointsDataFrame
class(divvy)
##We assume that the lat and long are in NAD83 projection
proj4string(divvy) <- CRS("+proj=longlat +datum=NAD83")
divvy <- spTransform(divvy,CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
divvy <- data.frame(divvy)##ggplot expects a datafrmae, not a spatialpoints dataframe
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()
bnds <- cbind(x=c(-87.71,-87.55,-87.55,-87.55,-87.71),
y=c(41.75,41.75,42,42,41.75))
preferredProj <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
bnds <- cbind(x=c(-87.71,-87.55,-87.55,-87.55,-87.71),
y=c(41.75,41.75,42,42,41.75))
SP <- SpatialPolygons(list(Polygons(list(Polygon(bnds)), "1")),
proj4string=CRS(preferredProj))
gI <- gIntersects(bikes, SP, byid=TRUE)
bnds <- cbind(x=c(1140000,1140000,1190000,1190000,1140000),
y=c(1850000,1940000,1940000,1850000,1850000))
SP <- SpatialPolygons(list(Polygons(list(Polygon(bnds)), "1")),
proj4string=CRS(proj4string(bikes)))
gI <- gIntersects(bikes, SP, byid=TRUE)
out <- vector(mode="list", length=length(which(gI)))
ii <- 1
for (i in seq(along=gI)){
if (gI[i]){
out[[ii]] <- gIntersection(bikes[i,], SP)
row.names(out[[ii]]) <- row.names(bikes)[i]
ii <- ii+1
}
out1 <- do.call("rbind", out)
}
proj4string(bikes)
proj4string(SP)
gI <- gIntersects(bikes, SP, byid=TRUE)
out <- vector(mode="list", length=length(which(gI)))
ii <- 1
for (i in seq(along=gI)){
if (gI[i]){
out[[ii]] <- gIntersection(bikes[i,], SP)
row.names(out[[ii]]) <- row.names(bikes)[i]
ii <- ii+1
}
out1 <- do.call("rbind", out)
}
ii <- 1
for (i in seq(along=gI)) if (gI[i]){out[[ii]] <- gIntersection(bikes[i,], SP);
row.names(out[[ii]]) <-
row.names(bikes)[i]; ii <- ii+1}
out1 <- do.call("rbind", out)
bike2 <- SpatialLinesDataFrame(out1,bikes@data)
bike2 <- spTransform(bike2,CRS(proj4string(city)))
bikes.df <- shapetoDataFrame(bike2)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
#geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()#+xlim(1140000,1190000)+ylim(1850000,1940000)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()#+xlim(1140000,1190000)+ylim(1850000,1940000)
cropShapeToBB <- function(shape,boundingbox){
SP <- SpatialPolygons(list(Polygons(list(Polygon(bnds)), "1")),
proj4string=CRS(proj4string(shape)))##Match projection to the layer we're cropping
gI <- gIntersects(shape, SP, byid=TRUE)##Find intersection, and then go through and trim each line.
out <- vector(mode="list", length=length(which(gI)))
ii <- 1
for (i in seq(along=gI)) if (gI[i]){out[[ii]] <- gIntersection(shape[i,], SP);
row.names(out[[ii]]) <-
row.names(shape)[i]; ii <- ii+1}
out1 <- do.call("rbind", out)
bike2 <- SpatialLinesDataFrame(out1,shape@data)##Reassign the original data
return(bike2)
}
bnds <- cbind(x=c(1140000,1140000,1190000,1190000,1140000),
y=c(1850000,1940000,1940000,1850000,1850000))##Draw a bounding box
bike2 <- cropShapeToBB(bikes,bnds)
bikes.df <- shapetoDataFrame(bike2)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()#+xlim(1140000,1190000)+ylim(1850000,1940000)
city2 <- cropShapeToBB(city,bnds)
cropShapeToBB <- function(shape,boundingbox){
SP <- SpatialPolygons(list(Polygons(list(Polygon(bnds)), "1")),
proj4string=CRS(proj4string(shape)))##Match projection to the layer we're cropping
gI <- gIntersects(shape, SP, byid=TRUE)##Find intersection, and then go through and trim each line.
out <- vector(mode="list", length=length(which(gI)))
ii <- 1
for (i in seq(along=gI)) if (gI[i]){out[[ii]] <- gIntersection(shape[i,], SP);
row.names(out[[ii]]) <-
row.names(shape)[i]; ii <- ii+1}
out1 <- do.call("rbind", out)
return(out1)
}
bike2 <- cropShapeToBB(bikes,bnds)
class(bike2)
bike2 <- SpatialLinesDataFrame(bike2,bikes@data)##Reassign the original data
bikes.df <- shapeToDataFrame(bike2)
city2 <- cropShapeToBB(city,bnds)
class(city2)
city2 <- SpatialPolygonsDataFrame(city2,city@data)
bikes.df <- shapeToDataFrame(bike2)
city.df <- shapeToDataFrame(city2)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()#+xlim(1140000,1190000)+ylim(1850000,1940000)
bnds <- cbind(x=c(1150000,1150000,1190000,1190000,1150000),
y=c(1850000,1940000,1940000,1850000,1850000))##Draw a bounding box
bike2 <- cropShapeToBB(bikes,bnds)
bike2 <- SpatialLinesDataFrame(bike2,bikes@data)##Reassign the original data
bikes.df <- shapeToDataFrame(bike2)
city2 <- cropShapeToBB(city,bnds)
city2 <- SpatialPolygonsDataFrame(city2,city@data)
city.df <- shapeToDataFrame(city2)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()#+xlim(1140000,1190000)+ylim(1850000,1940000)
bnds <- cbind(x=c(1150000,1150000,1190000,1190000,1150000),
y=c(1860000,1940000,1940000,1860000,1860000))##Draw a bounding box
bike2 <- cropShapeToBB(bikes,bnds)
bike2 <- SpatialLinesDataFrame(bike2,bikes@data)##Reassign the original data
bikes.df <- shapeToDataFrame(bike2)
city2 <- cropShapeToBB(city,bnds)
city2 <- SpatialPolygonsDataFrame(city2,city@data)
city.df <- shapeToDataFrame(city2)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
#mapTheme+
coord_fixed()#+xlim(1140000,1190000)+ylim(1850000,1940000)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
mapTheme+
coord_fixed()#+xlim(1140000,1190000)+ylim(1850000,1940000)
water <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'Hydro')
water2 <- cropShapeToBB(water,bnds)
class(water2)
water2 <- SpatialPolygonsDataFrame(water2,water@data)
water2 <- spatialPolygonsDataFrame(water2,water@data)
water2 <- SpatialPolygonsDataFrame(water2,water@data)
city2 <- cropShapeToBB(city,bnds)
class(city2)
View(water@data)
reg4.data <- as.data.frame(row.names(water),stringsAsFactors=FALSE)
reg4.data <- water[which(row.names(water) %in% row.names(water2)),]
reg4.data <- water[which(row.names(water) %in% row.names(water2)),]@data
water2 <- SpatialPolygonsDataFrame(water2,reg4.data)
water.df <- shapeToDataFrame(water2)
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_path(data=water.df,aes(long,lat,group=group),color='blue')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
mapTheme+
coord_fixed()
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
mapTheme+
coord_fixed()
parks <- readOGR("C:/users/jarrodanderin/Documents/_RWork/_Datasets/ChicagoGIS",'parks')
class(parks)
parks2 <- cropShapeToBB(parks,bnds)
parks.data <- parks[which(row.names(parks) %in% row.names(parks2)),]@data
parks2 <- SpatialPolygonsDataFrame(parks2,parks.data)
parks.df <- shapeToDataFrame(parks2)
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
mapTheme+
coord_fixed()
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
mapTheme+
coord_fixed()
View(bikes.df)
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group,color=BIKEROUTE))+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
mapTheme+
coord_fixed()
View(bikes.df)
table(bikes.df$BIKEROUTE)
help(grepl)
bikes$Built <- "Built"
bikes$Build[grepl("PROPOSED",bikes$BUILD)==TRUE] <- "Planned"
bikes.df$Built <- "Built"
bikes.df$Build[grepl("PROPOSED",bikes.df$BUILD)==TRUE] <- "Planned"
bikes.df$Built <- grepl("PROPOSED",bikes.df$BUILD)
bikes.df$Built <- grepl("PROPOSED",bikes.df$BIKEROUTE)
bikes.df$Built[bikes.df$Built==FALSE]<-"Built"
bikes.df$Built[bikes.df$Built==TRUE] <- "Planned"
bikes.df$Built <- 'Built'
bikes.df$Built[grepl("PROPOSED",bikes.df$BIKEROUTE)] <- "Planned"
bikes.df$Built<-NULL
View(bikes.df)
bikes.df$Built <- 'Built'
bikes.df$Built[grepl("PROPOSED",bikes.df$BIKEROUTE)] <- "Planned"
table(bikes.df$Built)
View(bikes.df$Built[which(bikes.df$Built=='Planned'),])
View(bikes.df$Built[which(bikes.df$Built=='Planned')])
View(bikes.df[which(bikes.df$Built=='Planned'),])
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group,linetype=Built),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
mapTheme+
coord_fixed()
mapTheme
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group,linetype=Built),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
theme_bw()+
theme(panel.border=element_blank(),
panel.grid=element_blank(),
axis.text=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())
coord_fixed()
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group,linetype=Built),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
theme_bw()+
theme(panel.border=element_blank(),
panel.grid=element_blank(),
axis.text=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())+
coord_fixed()
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group,linetype=Built),color='grey')+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
theme_bw()+
theme(panel.border=element_blank(),
panel.grid=element_blank(),
axis.text=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())+
scale_linetype_discrete(name="Status of\nBike path")
coord_fixed()
ggplot()+
geom_polygon(data=city.df,aes(long,lat,group=group))+
geom_path(data=bikes.df,aes(long,lat,group=group))+
geom_point(data=divvy,aes(x=latitude,y=longitude),color='red')+
coord_fixed()
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group,linetype=Built),color='grey',size=2)+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
ggtitle("Map of Chicago Divvy Stations and Bike Paths")+
theme_bw()+
theme(panel.border=element_blank(),
panel.grid=element_blank(),
axis.text=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())+
scale_linetype_discrete(name="Status of\nBike path")+
coord_fixed()
ggplot()+
geom_polygon(data=water.df,aes(long,lat,group=group),color='blue',fill='blue')+
#geom_polygon(data=city.df,aes(long,lat,group=group),fill=NA,color='black')+
geom_polygon(data=parks.df,aes(long,lat,group=group),fill='green',color='green')+
geom_path(data=bikes.df,aes(long,lat,group=group,linetype=Built),color='grey',size=1)+
geom_point(data=divvy,aes(longitude,latitude),color='red')+
ggtitle("Map of Chicago Divvy Stations and Bike Paths")+
theme_bw()+
theme(panel.border=element_blank(),
panel.grid=element_blank(),
axis.text=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank())+
scale_linetype_discrete(name="Status of\nBike path")+
coord_fixed()
