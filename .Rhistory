q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name
FROM (SELECT ne_50m_rivers_lake_centerlines.gid, ne_50m_rivers_lake_centerlines.name, (ST_DUMP(ST_Intersection(ne_50m_admin_1_states_provinces_shp.geom, ne_50m_rivers_lake_centerlines.geom))).geom AS geom
FROM ne_50m_admin_1_states_provinces_shp WHERE (ne_50m_admin_1_states_provinces_shpname='Alabama')
INNER JOIN ne_50m_rivers_lake_centerlines
ON ST_Intersects(ne_50m_admin_1_states_provinces_shp.geom, ne_50m_rivers_lake_centerlines.geom))
AS clipped
WHERE ST_Dimension(clipped.geom) = 1;"
rs = dbSendQuery(con, q)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name
FROM (SELECT ne_50m_rivers_lake_centerlines.gid, ne_50m_rivers_lake_centerlines.name, (ST_DUMP(ST_Intersection(ne_50m_admin_1_states_provinces_shp.geom, ne_50m_rivers_lake_centerlines.geom))).geom AS geom
FROM ne_50m_admin_1_states_provinces_shp
INNER JOIN ne_50m_rivers_lake_centerlines
ON ST_Intersects(ne_50m_admin_1_states_provinces_shp.geom, ne_50m_rivers_lake_centerlines.geom))
AS clipped
WHERE ST_Dimension(clipped.geom) = 1 AND clipped.name='Alabama';"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name
FROM (SELECT ne_50m_rivers_lake_centerlines.gid, ne_50m_rivers_lake_centerlines.name, (ST_DUMP(ST_Intersection(states.geom, ne_50m_rivers_lake_centerlines.geom))).geom AS geom
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines
ON ST_Intersects(states.geom, ne_50m_rivers_lake_centerlines.geom))
AS clipped
WHERE ST_Dimension(clipped.geom) = 1 AND clipped.name='Alabama';"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name
FROM (SELECT ne_50m_rivers_lake_centerlines.gid, ne_50m_rivers_lake_centerlines.name, (ST_DUMP(ST_Intersection(states.geom, ne_50m_rivers_lake_centerlines.geom))).geom AS geom
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, ne_50m_rivers_lake_centerlines.geom))
AS clipped
WHERE ST_Dimension(clipped.geom) = 1 AND clipped.name='Alabama';"
rs = dbSendQuery(con, q)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE ST_Dimension(clipped.geom) = 1 AND states.name='Alabama';"
rs = dbSendQuery(con, q)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE ST_Dimension(clipped.geom) = 1 AND clipped.states_name='Alabama';"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (clipped.states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
View(states3@data)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, clipped.states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (clipped.states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
View(states3@data)
View(states3@data)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (clipped.states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1);"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
OUTER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Alabama');"
rs = dbSendQuery(con, q)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_rivers_lake_centerlines AS rivers
INNER JOIN ne_50m_admin_1_states_provinces_shp AS states
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
View(df)
convertQueryToSPObj <- function(df, proj=4326, type='polygon'){
row.names(df) = 1:nrow(df)
df$gid <- row.names(df)
print(nrow(df))
# Create spatial polygons
# To set the PROJ4 string, enter the EPSG SRID and uncomment the
# following two lines:
EPSG = make_EPSG()
p4s = EPSG[which(EPSG$code == 4326), "prj4"]
for (i in seq(nrow(df))) {
if (i == 1) {
spTemp = readWKT(df$geom[i], df$gid[i], p4s)
}
else {
spTemp = rbind(
spTemp, readWKT(df$geom[i], df$gid[i], p4s)
)
}
}
if(type=='polygon'){
# Create SpatialPolygonsDataFrame, drop WKT field from attributes
spdfFinal = SpatialPolygonsDataFrame(spTemp, df[-1])
}
if(type=='lines'){
sddfFinal = SpatialLinesDataFrame(spTemp, df[-1])
}
return(spdfFinal)
}
convertQueryToSPObj <- function(df, proj=4326, type='polygon'){
row.names(df) = 1:nrow(df)
df$gid <- row.names(df)
print(nrow(df))
# Create spatial polygons
# To set the PROJ4 string, enter the EPSG SRID and uncomment the
# following two lines:
EPSG = make_EPSG()
p4s = EPSG[which(EPSG$code == 4326), "prj4"]
for (i in seq(nrow(df))) {
if (i == 1) {
spTemp = readWKT(df$geom[i], df$gid[i], p4s)
}
else {
spTemp = rbind(
spTemp, readWKT(df$geom[i], df$gid[i], p4s)
)
}
}
if(type=='polygon'){
# Create SpatialPolygonsDataFrame, drop WKT field from attributes
spdfFinal = SpatialPolygonsDataFrame(spTemp, df[-1])
}
if(type=='lines'){
spdfFinal = SpatialLinesDataFrame(spTemp, df[-1])
}
return(spdfFinal)
}
states3 <- convertQueryToSPObj(df,type='lines')
plot(states3)
plot(state2, add=TRUE)
shapeToDataFrame <- function(shape){
shape@data$id <- rownames(shape@data)
shape.points = fortify(shape,region='id')
shape.df = join(shape.points, shape@data, by='id')
return(shape.df)
}
bama <- shapeToDataFrame(states2)
library(ggplot2)
bama <- shapeToDataFrame(states2)
install.packages("maptools")
library(maptools)
library(ggplot2)
bama <- shapeToDataFrame(states2)
library(plyr)
bama <- shapeToDataFrame(states2)
ggplot()+geom_polygon(bama,aes(lat,long,order=order))
ggplot()+geom_polygon(data=bama,aes(lat,long,order=order))
View(bama)
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_50m_admin_1_states_provinces_shp WHERE (name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df)
plot(states3)
bama <- shapeToDataFrame(states2)
ggplot()+geom_polygon(data=bama,aes(lat,long,order=order))
bama <- shapeToDataFrame(states3)
ggplot()+geom_polygon(data=bama,aes(lat,long,order=order))
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+coord_fixed()
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
rivers <- convertQueryToSPObj(df,type='lines')
rivers <- shapeToDataFrame(rivers)
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_line(data=rivers,aes(long,lat,order=order))+coord_fixed()
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_paths(data=rivers,aes(long,lat,order=order))+coord_fixed()
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_path(data=rivers,aes(long,lat,order=order))+coord_fixed()
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_segment(data=rivers,aes(long,lat,order=order))+coord_fixed()
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_segment(data=rivers,aes(xend=long,yend=lat,order=order))+coord_fixed()
ggplot()+geom_polygon(data=bama,aes(lat,long,order=order))
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_path(data=rivers,aes(long,lat,order=order))+coord_fixed()
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_point(data=rivers,aes(long,lat,order=order))+coord_fixed()
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
rivers <- convertQueryToSPObj(df,type='lines')
rivers@data$id <- rownames(rivers@data)
rivers.points = fortify.SpatialLinesDataFrame(rivers,region="id")
rivers <- convertQueryToSPObj(df,type='lines')
rivers <- shapeToDataFrame(rivers)
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_path(data=rivers,aes(long,lat,order=order, group=name))+coord_fixed()
View(rivers)
dbSendQuery(con, "SELECT column_name FROM information_schema.columns WHERE table_name='ne_50m_rivers_lake_centerlines';")
fetch(dbSendQuery(con, "SELECT column_name FROM information_schema.columns WHERE table_name='ne_50m_rivers_lake_centerlines';"))
fetch()
dbDisconnect(con)
dbClearResult()
dbClearResult(rs)
fetch(dbSendQuery(con, "SELECT column_name FROM information_schema.columns WHERE table_name='ne_50m_rivers_lake_centerlines';"))
library(RPostgreSQL)
#library(RODBC)
library(rgdal)
library(rgeos)
convertQueryToSPObj <- function(df, proj=4326, type='polygon'){
row.names(df) = 1:nrow(df)
df$gid <- row.names(df)
print(nrow(df))
# Create spatial polygons
# To set the PROJ4 string, enter the EPSG SRID and uncomment the
# following two lines:
EPSG = make_EPSG()
p4s = EPSG[which(EPSG$code == 4326), "prj4"]
for (i in seq(nrow(df))) {
if (i == 1) {
spTemp = readWKT(df$geom[i], df$gid[i], p4s)
}
else {
spTemp = rbind(
spTemp, readWKT(df$geom[i], df$gid[i], p4s)
)
}
}
if(type=='polygon'){
# Create SpatialPolygonsDataFrame, drop WKT field from attributes
spdfFinal = SpatialPolygonsDataFrame(spTemp, df[-1])
}
if(type=='lines'){
spdfFinal = SpatialLinesDataFrame(spTemp, df[-1])
}
return(spdfFinal)
}
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_50m_admin_1_states_provinces_shp WHERE (name='Alabama');"
rs = dbSendQuery(con, q)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname='gis')
q = "SELECT ST_AsText(geom) AS geom, name FROM ne_50m_admin_1_states_provinces_shp;"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_50m_admin_1_states_provinces_shp WHERE (name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df)
plot(states3)
fetch(dbSendQuery(con,"SELECT column_name FROM information_schema.columns WHERE table_name='ne_50m_rivers_lakes_centerlines';"))
fetch(dbSendQuery(con,"SELECT column_name FROM information_schema.columns WHERE table_name='ne_50m_rivers_lake_centerlines';"))
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Alabama');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
rivers <- convertQueryToSPObj(df,type='lines')
shapeToDataFrame <- function(shape){
shape@data$id <- rownames(shape@data)
shape.points = fortify(shape,region='id')
shape.df = join(shape.points, shape@data, by='id')
return(shape.df)
}
bama <- shapeToDataFrame(states3)
library(ggplot2)
bama <- shapeToDataFrame(states3)
library(ddply)
library(plyr)
bama <- shapeToDataFrame(states3)
rivers <- shapeToDataFrame(rivers)
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_path(data=rivers,aes(long,lat,order=order, group=gid))+coord_fixed()
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_50m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_lake_centerlines AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Washington');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
rivers <- convertQueryToSPObj(df,type='lines')
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_50m_admin_1_states_provinces_shp WHERE (name='Washington');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
states3 <- convertQueryToSPObj(df)
plot(states3)
bama <- shapeToDataFrame(states3)
rivers <- shapeToDataFrame(rivers)
ggplot()+geom_polygon(data=bama,aes(long,lat,order=order))+geom_path(data=rivers,aes(long,lat,order=order, group=gid))+coord_fixed()
ogrListLayers()
ogrListLayers(gis)
ogrListLayers(dsn)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_10m_admin_1_states_provinces_shp AS states
INNER JOIN ne_50m_rivers_north_america AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Washington');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_10m_admin_1_states_provinces_shp AS states
INNER JOIN ne_10m_rivers_north_america AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Washington');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
rivers <- convertQueryToSPObj(df,type='lines')
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_10m_admin_1_states_provinces_shp WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
wash <- convertQueryToSPObj(df)
ggplot()+geom_polygon(data=wash,aes(long,lat,order=order))+geom_path(data=rivers,aes(long,lat,order=order, group=gid))+coord_fixed()
ggplot()+geom_polygon(data=wash,aes(long,lat,order=order,group=name))+geom_path(data=rivers,aes(long,lat,order=order, group=gid))+coord_fixed()
View(rivers@data)
View(wash@data)
ggplot()+
geom_polygon(data=wash,aes(long,lat,order=order,group=name))+
geom_path(data=rivers,aes(long,lat,order=order, group=gid))+
coord_fixed()
ggplot()+
geom_polygon(data=wash,aes(long,lat,order=order))#+
View(wash)
View(df)
wah <- shapeToDataFrame(wash)
rivers <- shapeToDataFrame(rivers)
ggplot()+
geom_polygon(data=wash,aes(long,lat,order=order,group=gid))+
geom_path(data=rivers,aes(long,lat,order=order, group=gid))+
coord_fixed()
View(wash)
q <- "SELECT ST_AsText(geom) AS geom, clipped.gid, clipped.name, states_name
FROM (SELECT rivers.gid, rivers.name, (ST_DUMP(ST_Intersection(states.geom, rivers.geom))).geom AS geom, states.name as states_name
FROM ne_10m_admin_1_states_provinces_shp AS states
INNER JOIN ne_10m_rivers_north_america AS rivers
ON ST_Intersects(states.geom, rivers.geom))
AS clipped
WHERE (ST_Dimension(clipped.geom) = 1) AND (states_name='Washington');"
rs = dbSendQuery(con, q)
df = fetch(rs, n=-1)
colnames(df)
rivers <- convertQueryToSPObj(df,type='lines')
rivers <- shapeToDataFrame(rivers)
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_10m_admin_1_states_provinces_shp WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
wash <- convertQueryToSPObj(df)
wah <- shapeToDataFrame(wash)
wash <- shapeToDataFrame(wash)
ggplot()+
geom_polygon(data=wash,aes(long,lat,order=order,group=gid))+
geom_path(data=rivers,aes(long,lat,order=order, group=gid))+
coord_fixed()
View(wash)
ggplot()+
geom_polygon(data=wash,aes(long,lat,group=gid))+
geom_path(data=rivers,aes(long,lat, group=gid))+
coord_fixed()
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_10m_admin_1_states_provinces_lines WHERE (name='Washington');"
rs = dbSendQuery(con,q)
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_10m_admin_1_states_provinces_lines_shp WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
wash <- convertQueryToSPObj(df)
wash <- convertQueryToSPObj(df, type='lines')
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_10m_admin_1_states_provinces_lines_shp WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
wash <- convertQueryToSPObj(df, type='lines')
View(df)
q <- "SELECT column_name from information_schema.columns WHERE table_name='ne_10m_admin_1_states_provinces_lines_shp';"
fetch(dbSendQuery(con,q))
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_10m_admin_1_states_provinces_lines_shp;"#" WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
View(df)
View(df[which(grepl("Washington",df$name)==TRUE),])
View(df[which("Washi" %in% df$name)==TRUE),])
View(df[which("Washi" %in% df$name==TRUE),])
View(table(df$name))
q <- "SELECT ST_AsText(geom) AS geom, gid, adm0_name FROM ne_10m_admin_1_states_provinces_lines_shp;"#" WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
View(df)
q <- "SELECT ST_AsText(geom) AS geom, gid, namealt_l FROM ne_10m_admin_1_states_provinces_lines_shp;"#" WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
q <- "SELECT ST_AsText(geom) AS geom, gid, name_alt_l FROM ne_10m_admin_1_states_provinces_lines_shp;"#" WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
View(df)
table(df$name_alt_l)
q <- "SELECT ST_AsText(geom) AS geom, gid, name_alt_l FROM ne_10m_admin_1_states_provinces_lines_shp WHERE (name_alt_l='WA|Wash.');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
wash <- convertQueryToSPObj(df, type='lines')
wash <- shapeToDataFrame(wash)
ggplot()+
geom_polygon(data=wash,aes(long,lat,group=gid))+
geom_path(data=rivers,aes(long,lat, group=gid))+
coord_fixed()
q <- "SELECT * FROM ne_10m_admin_1_states_provinces_lins_shp;"#ST_AsText(geom) AS geom, gid, name_alt_l FROM ne_10m_admin_1_states_provinces_lines_shp WHERE (name_alt_l='WA|Wash.');"
rs = dbSendQuery(con,q)
q <- "SELECT * FROM ne_10m_admin_1_states_provinces_lines_shp;"#ST_AsText(geom) AS geom, gid, name_alt_l FROM ne_10m_admin_1_states_provinces_lines_shp WHERE (name_alt_l='WA|Wash.');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
View(df)
temp <- df[which(df$adm0_name=='United States'),]
temp <- df[which(df$adm0_name=='USA'),]
temp <- df[which(df$adm0_name=='America'),]
temp <- df[which(df$adm0_name=='US'),]
temp <- df[which(df$adm0_name=='United States of America'),]
View(temp)
q <- "SELECT ST_AsText(geom) AS geom, gid, name_l FROM ne_10m_admin_1_states_provinces_lines_shp WHERE (name_l='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
wash <- convertQueryToSPObj(df, type='lines')
wash <- shapeToDataFrame(wash)
ggplot()+
geom_path(data=wash,aes(long,lat,group=gid))+
geom_path(data=rivers,aes(long,lat, group=gid))+
coord_fixed()
ggplot()+
geom_path(data=wash,aes(long,lat,group=gid))#+
q <- "SELECT ST_AsText(geom) AS geom, gid, name FROM ne_50m_admin_1_states_provinces_shp WHERE (name='Washington');"
rs = dbSendQuery(con,q)
df = fetch(rs, n=-1)
wash <- convertQueryToSPObj(df, type='lines')
wash <- convertQueryToSPObj(df)
wash <- shapeToDataFrame(wash)
ggplot()+
geom_polygon(data=wash,aes(long,lat,group=gid))#+
geom_path(data=rivers,aes(long,lat, group=gid))+
ggplot()+
geom_polygon(data=wash,aes(long,lat,group=gid))+
geom_path(data=rivers,aes(long,lat, group=gid))+
coord_fixed()
ggplot()+
geom_polygon(data=wash,aes(long,lat,group=gid))+
geom_path(data=rivers,aes(long,lat, group=gid))+
coord_fixed()
